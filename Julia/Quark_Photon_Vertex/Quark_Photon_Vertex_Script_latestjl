using Plots, SpecialFunctions

#The Expected Pion Mass should be around 0.1396GeV
include("f:/Julia/3_Quark-Photon-Vertex/Quark_Photon_Vertex_functions_me.jl")
#global Z_2 = 0.97 #Renormaliation 
#p_0 = 0.72 #(GeV)^2, x=p^2/(0.72GeV)^2
#Z_2=0.97

num1 = 128
num2 = 16
num3 = 400
L = 10^3
u_q, w_q = Gauss_Legendre1(L^2, num3)
u_L1, w_L1 = Gauss_Legendre1(L^2, num1)
u_L2, w_L2 = Gauss_Legendre(0,L^2, num1)
u_y, w_y = Gauss_Legendre(-1, 1, num2)
u_C, w_C = Gauss_Chebyshev2(-1, 1, num2)

#Paramters
global m = 0.004; 
global eta = 1.8 #1.92;
global Gamma = 0.72;
global mu_s= 19; #32
global Z_2=1 #initial value, 

#Routine for the Quark propagator
global A_help = map.(x -> 1, u_q)
global A_new= map.(x -> 1, u_q)
global M_help = map.(x -> 0.01, u_q)
global diff = 1 
while abs(diff) > 10^(-12)
    global A_help=A_new
    global Sigma_A(x::Number)::Number =  eta^3/Gamma^2*Z_2^2 *
                    sum((exp.(-(sqrt.(Complex(x)) .- sqrt.(u_q)).^2 * (eta / Gamma)^2) .* (-2 * sqrt.(Complex(x)) .* sqrt.(u_q) * eta^2 .* besselix.(1, 2 * sqrt.(Complex(x)) .* sqrt.(u_q) * (eta / Gamma)^2) .+ (2*Gamma^2 .+ x * eta^2 .+ u_q * eta^2) .* besselix.(2, 2 * sqrt.(Complex(x)) .* sqrt.(u_q) * (eta / Gamma)^2)) ./ x .* 1 ./ (A_help .* (u_q .+ M_help.^2)) .*
                    u_q).*w_q)
   # global diff_A=sum(abs.(map.(A, u) .- A_help))               
    global Sigma_M(x::Number)::Number = eta^5/Gamma^2*Z_2^2*
                    sum((exp.(-(sqrt.(Complex(x)) .- sqrt.(u_q)).^2 * (eta / Gamma)^2) .* ((x .+ u_q) .* besselix.(1, 2 * sqrt.(Complex(x)) .* sqrt.(u_q) * (eta / Gamma)^2) .- 2 * sqrt.(Complex(x)) .* sqrt.(u_q) .* besselix.(2, 2 * sqrt.(Complex(x)) .* sqrt.(u_q) * (eta / Gamma)^2)) ./sqrt.(Complex(x)) .* M_help ./ (A_help .* (u_q .+ M_help.^2)) .*
                    sqrt.(u_q)) .* w_q)
  #  global diff_B=sum(abs.(map.(B_new, u) .- B_help))  
    global Z_2= 1 .- map(Sigma_A, mu_s)[1]
    global A_new = Z_2 .+ map.(Sigma_A, u_q)
    global M_help = (m .+  map.(Sigma_M, u_q) .- map.(Sigma_M, mu_s)[1]) ./ A_new
    global diff = sqrt(sum(abs2.((A_new .- A_help))))
end
A(x::Number)::Number = Z_2 + Sigma_A(x)
M(x::Number)::Number = (m .- map(Sigma_M, mu_s)[1] .+ Sigma_M(x))./A(x)
println("Quark Propagator is ready")

#Doing the y integral first
#functions for integration over y
    function K_11s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_11ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_22s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_22ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_33s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_33ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_44s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_44ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_55s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_55ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_66s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_66ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_77s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_77ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_88s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_88ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_16s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_16ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_61s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_61ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_17s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_17ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_71s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_71ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_23s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_23ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_32s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_32ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_67s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_67ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_76s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_76ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_28s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_28ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_82s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_82ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_38s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_38ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_83s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_83ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_99s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_99ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_1010s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_1010ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_1011s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_1011ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_1110s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_1110ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_1111s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_1111ss.(x, xs, z, zs, u_y) .* w_y)
    end

    function K_1212s(x::Number, xs::Number, z::Number, zs::Number)::Complex{Float64}
        return sum(g.(x, xs, z, zs, u_y) .* K_1212ss.(x, xs, z, zs, u_y) .* w_y)
    end

#-----------------------------------------------------------------------------------------------------------------
#Creating our Grid for K Matrix for the values K(p,q,z,zs)=K(u_L1,u_L1,u_C,u_C)
K_11 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_22 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_33 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_44 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_55 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_66 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_77 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_88 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_99 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_1010 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_1011 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_1110 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_1111 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_1212 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_16 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_61 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_17 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_71 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_23 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_32 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_67 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_76 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_28 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_82 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_38 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
K_83 = Vector{Number}(undef, length(u_L1)^2 * length(u_C)^2)
global idx_var = 0
for l = 1:lastindex(u_C)
    for k = 1:lastindex(u_L1)
        for j = 1:lastindex(u_C)
            for i = 1:lastindex(u_L1)
                #global idx_var += 1
                global idx_var = i + lastindex(u_L1) * (j - 1) + lastindex(u_L1) * lastindex(u_C) * (k - 1) + lastindex(u_L1)^2 * lastindex(u_C) * (l - 1)
                K_11[idx_var] = K_11s(u_L1[k], u_L1[i], u_C[l], u_C[j])     #K_11s(x::Number, xs::Number, z::Number, zs::Number)
                K_22[idx_var] = K_22s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_33[idx_var] = K_33s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_44[idx_var] = K_44s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_55[idx_var] = K_55s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_66[idx_var] = K_66s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_77[idx_var] = K_77s(u_L1[k], u_L1[i], u_C[l], u_C[j])     
                K_88[idx_var] = K_88s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_99[idx_var] = K_99s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_1010[idx_var] = K_1010s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_1011[idx_var] = K_1011s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_1110[idx_var] = K_1110s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_1111[idx_var] = K_1111s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_1212[idx_var] = K_1212s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_16[idx_var] = K_16s(u_L1[k], u_L1[i], u_C[l], u_C[j])     
                K_61[idx_var] = K_61s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_17[idx_var] = K_17s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_71[idx_var] = K_71s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_23[idx_var] = K_23s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_32[idx_var] = K_32s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_67[idx_var] = K_67s(u_L1[k], u_L1[i], u_C[l], u_C[j])     
                K_76[idx_var] = K_76s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_28[idx_var] = K_28s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_82[idx_var] = K_82s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_38[idx_var] = K_38s(u_L1[k], u_L1[i], u_C[l], u_C[j])
                K_83[idx_var] = K_83s(u_L1[k], u_L1[i], u_C[l], u_C[j])
            end
        end
    end
end


#running the Integral for various values for the mass to see where lambda(m)=1
#massspace = [im * 0.1, 0.01, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 0.1396];
Qspace=[0.1];
#push!(massspace,0.14)
#sort!(massspace)
#for i in Qspace
    global Q = 0.1
   

    G_11 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_22 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_33 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_44 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_12 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_13 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_14 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_23 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_24 = Matrix{Number}(undef, length(u_L1), length(u_C))
    G_34 = Matrix{Number}(undef, length(u_L1), length(u_C))

    for j = 1:lastindex(u_C)
        for i = 1:lastindex(u_L1)
            G_11[i, j] = G_11s(u_L1[i], u_C[j], Q)
            G_22[i, j] = G_22s(u_L1[i], u_C[j], Q)
            G_33[i, j] = G_33s(u_L1[i], u_C[j], Q)
            G_44[i, j] = G_44s(u_L1[i], u_C[j], Q)
            G_12[i, j] = G_12s(u_L1[i], u_C[j], Q)
            G_13[i, j] = G_13s(u_L1[i], u_C[j], Q)
            G_14[i, j] = G_14s(u_L1[i], u_C[j], Q)
            G_23[i, j] = G_23s(u_L1[i], u_C[j], Q)
            G_24[i, j] = G_24s(u_L1[i], u_C[j], Q)
            G_34[i, j] = G_34s(u_L1[i], u_C[j], Q)
        end
    end

    global A_help1 = ones(Number, length(u_L1), length(u_C))
    global A_help2 = ones(Number, length(u_L1), length(u_C))
    global A_help3 = ones(Number, length(u_L1), length(u_C))
    global A_help4 = ones(Number, length(u_L1), length(u_C))
    global A_help5 = ones(Number, length(u_L1), length(u_C))
    global A_help6 = ones(Number, length(u_L1), length(u_C))
    global A_help7 = ones(Number, length(u_L1), length(u_C))
    global A_help8 = ones(Number, length(u_L1), length(u_C))
    global A_help9 = ones(Number, length(u_L1), length(u_C))
    global A_help10 = ones(Number, length(u_L1), length(u_C))
    global A_help11 = ones(Number, length(u_L1), length(u_C))
    global A_help12 = ones(Number, length(u_L1), length(u_C))
    global diff1=1
    global diff2=1
    for k = 1:30

        global B_help1 = (G_11 .* A_help1 + G_12 .* A_help2 + G_13 .* A_help3 + G_14 .* A_help4)
        global B_help2 = (G_12 .* A_help1 + G_22 .* A_help2 + G_23 .* A_help3 + G_24 .* A_help4)
        global B_help3 = (G_13 .* A_help1 + G_23 .* A_help2 + G_33 .* A_help3 + G_34 .* A_help4)
        global B_help4 = (G_14 .* A_help1 + G_24 .* A_help2 + G_34 .* A_help3 + G_44 .* A_help4)

        global B_help5 = (G_44 .* A_help5 + G_34 .* A_help6 - G_24 .* A_help7 - G_14 .* A_help8) 
        global B_help6 = (G_34 .* A_help5 + G_33 .* A_help6 - G_23 .* A_help7 - G_13 .* A_help8) 
        global B_help7 = (-G_24 .* A_help5 - G_23 .* A_help6 + G_22 .* A_help7 + G_12 .* A_help8) 
        global B_help8 = (-G_14 .* A_help5 - G_13 .* A_help6 + G_12 .* A_help7 + G_11 .* A_help8) 

        global A_help1 = -a1(B_help1, B_help6,B_help7).* 0.5 ./ (2 .* pi) .^ 3 .+Z_2 * sqrt(2)
        global A_help2 = -a2(B_help2, B_help3, B_help8) .* 0.5 ./ (2 .* pi) .^ 3 
        global A_help3 = -a3(B_help2, B_help3, B_help8) .* 0.5 ./ (2 .* pi) .^ 3  
        global A_help4 = -a4(B_help4) .* 0.5 ./ (2 .* pi) .^ 3  
        global A_help5 = -a5(B_help5).* 0.5 ./ (2 .* pi) .^ 3  
        global A_help6 = -a6(B_help1, B_help6, B_help7) .* 0.5 ./ (2 .* pi) .^ 3  
        global A_help7 = -a7(B_help1,  B_help6, B_help7) .* 0.5 ./ (2 .* pi) .^ 3   .+ Z_2
        global A_help8 = -a8(B_help2, B_help3, B_help8) .* 0.5 ./ (2 .* pi) .^ 3 

        global diff1=sqrt(sum(abs2.(B_help1[:,7] .-(G_11 .* A_help1 + G_12 .* A_help2 + G_13 .* A_help3 + G_14 .* A_help4)[:,7])))
        println(diff1)
    end
    println("diff1 geschafft")
    #reconstruct a9,..,a12 from the WTI solution for g1,...,g4
    wti_g1=real.(0.5 .*( A.(u_L1.+Q^2/4 .+ Q .* sqrt.(u_L1)*u_C[9]) .+ A.(u_L1.+Q^2/4 .- Q .* sqrt.(u_L1)*u_C[9]) ))
    wti_g2=real.(2 .*( A.(u_L1.+Q^2/4 .+ Q .* sqrt.(u_L1)*u_C[9]) .- A.(u_L1.+Q^2/4 .- Q .* sqrt.(u_L1)*u_C[9]) )./ ( 2 .*Q .* sqrt.(u_L1) .* u_C[9]))
    wti_g3=real.(-2 .* ( A.(u_L1.+Q^2/4 .+ Q .* sqrt.(u_L1)*u_C[9]) .* M.(u_L1.+Q^2/4 .+ Q .* sqrt.(u_L1)*u_C[9]) .- A.(u_L1.+Q^2/4 .- Q .* sqrt.(u_L1)*u_C[9]) .* M.(u_L1.+Q^2/4 .- Q .* sqrt.(u_L1)*u_C[9]) )./ ( 2 .*Q .* sqrt.(u_L1) .* u_C[9]))

    global wti_a9_full = ones(Number, length(u_L1), length(u_C))
    global wti_a10_full = ones(Number, length(u_L1), length(u_C))
    global wti_a11_full = ones(Number, length(u_L1), length(u_C))
    for j=1:lastindex(B_help2, 2)
        for i=1:lastindex(B_help2, 1)
            wti_a9_full[i,j]=im*(-2 .* ( A.(u_L1[i].+Q^2/4 .+ Q .* sqrt.(u_L1[i])*u_C[j]) .* M.(u_L1[i].+Q^2/4 .+ Q .* sqrt.(u_L1[i])*u_C[j]) .- A.(u_L1[i].+Q^2/4 .- Q .* sqrt.(u_L1[i])*u_C[j]) .* M.(u_L1[i].+Q^2/4 .- Q .* sqrt.(u_L1[i])*u_C[j]) )./ ( 2 .*Q .* sqrt.(u_L1[i]) .* u_C[6])).*sqrt.(u_L1[i])*u_C[j]
        end
    end
    for j=1:lastindex(B_help2, 2)
        for i=1:lastindex(B_help2, 1)
            wti_a10_full[i,j]=(0.5 .*( A.(u_L1[i].+Q^2/4 .+ Q .* sqrt.(u_L1[i])*u_C[j]) .+ A.(u_L1[i].+Q^2/4 .- Q .* sqrt.(u_L1[i])*u_C[j]) )) .+(2 .*( A.(u_L1[i].+Q^2/4 .+ Q .* sqrt.(u_L1[i])*u_C[j]) .- A.(u_L1[i].+Q^2/4 .- Q .* sqrt.(u_L1[i])*u_C[j]) )./ ( 2 .*Q .* sqrt.(u_L1[i]) .* u_C[j])) .*u_L1[i]*u_C[j]^2
        end
    end
    for j=1:lastindex(B_help2, 2)
        for i=1:lastindex(B_help2, 1)
            wti_a11_full[i,j]=(2 .*( A.(u_L1[i].+Q^2/4 .+ Q .* sqrt.(u_L1[i])*u_C[j]) .- A.(u_L1[i].+Q^2/4 .- Q .* sqrt.(u_L1[i])*u_C[j]) )./ ( 2 .*Q .* sqrt.(u_L1[i]) .* u_C[j])) .*u_L1[i]*u_C[j]*sqrt(1-(u_C[j]).^2)
        end
    end

    for k = 1:30
        global B_help9 = (G_44 .* A_help9 + G_34 .* A_help10 - G_24 .* A_help11 - G_14 .* A_help12) 
        global B_help10 = (G_34 .* A_help9 + G_33 .* A_help10 - G_23 .* A_help11 - G_13 .* A_help12) 
        global B_help11 = (-G_24 .* A_help9 - G_23 .* A_help10 + G_22 .* A_help11 + G_12 .* A_help12) 
        global B_help12 = (-G_14 .* A_help9 - G_13 .* A_help10 + G_12 .* A_help11 + G_11 .* A_help12) 

        global A_help9 = -a9(B_help9).* 0.5 ./ (2 .* pi) .^ 3
        global A_help10 = -a10(B_help10, B_help11) .* 0.5 ./ (2 .* pi) .^ 3  .+ Z_2
        global A_help11 = -a11(B_help10, B_help11) .* 0.5 ./ (2 .* pi) .^ 3 
        global A_help12 = -a12(B_help12) .* 0.5 ./ (2 .* pi) .^ 3 

        global diff2=sqrt(sum(abs2.(B_help9[:,7] .- (G_44 .* A_help9 + G_34 .* A_help10 - G_24 .* A_help11 - G_14 .* A_help12)[:,7] )))
        println(diff2)
    end
#end

z=u_C[9]
s=sqrt(1-z^2)
k= sqrt.(u_L1)

test_a9=im*wti_g3.*k*z
test_a10=wti_g1 .+wti_g2 .*k.^2*z^2
test_a11=wti_g2 .*k.^2*z*s

g1=real.(A_help10[:,9].-A_help11[:,9]*z/s)
g2=real.(A_help11[:,9]./(k.^2*z*s))
g3=real.(-im .*A_help9[:,9] ./(k*z) )
g4=real.(im .* A_help12[:,9] ./ (k.^2*Q*z*s))


f1=real.(1/(Q^2 * s^2) * (A_help1[:,9] ./sqrt(2) + z*s*(A_help6[:,9] .+ A_help11[:,9]) .- z^2 *A_help7[:,9]  .- s^2* A_help10[:,9] ))
f2=real.(-im ./ (k.^2*Q^3*s^2) .* (A_help2[:,9] /sqrt(2) .- A_help8[:,9] + s/z*(A_help3[:,9]/sqrt(2) .+ A_help12[:,9]) ) )
f3=real.(im ./ (sqrt(2) *Q) .* ( -A_help2[:,9] .+ z/s * A_help3[:,9]))
f4=real.(1 ./ (sqrt(2) *k* Q * s) .* A_help4[:,9]) 
f5=real.(-im ./ (k*Q^2*s) .* ( A_help5[:,9] .- s/z * A_help9[:,9]))
f6=real.(-1 ./ (k.^2 * Q^2 * s^2) .* ( A_help1[:,9] /sqrt(2) .- A_help7[:,9] .+ s/z * A_help11[:,9]))
f7=real.(-1 ./ (k.^2 * Q^2 * s^2) .* ( A_help1[:,9] /sqrt(2) .- A_help7[:,9] .+ s/z * A_help6[:,9]))
f8=real.(im ./ (k.^2*Q*s^2) .* ( A_help2[:,9]/sqrt(2) .- A_help8[:,9]))


#plot(u_L1,imag.(test_a9))
plot(u_L1,(test_a10))
plot(u_L1,(test_a11))
#scatter!(u_L2,zeros(128,1))
plot(u_L1,real.(A_help10[:,9]))
#plot(u_L1,test_a10 .- test_a11*z/s )

pl1=plot(u_L1,abs.(g1-wti_g1), label="\$\\left|g_1 - g_1^{WTI}\\right| \$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=18, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
savefig("g1_01_diff.pdf")

pl1=plot(u_L1,abs.(g2-wti_g2), label="\$\\left|g_2 - g_2^{WTI}\\right|\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=18, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
savefig("g2_01_diff.pdf")

pl1=plot(u_L1,abs.(g3-wti_g3), label="\$\\left|g_3 - g_3^{WTI}\\right|\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=18, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
savefig("g3_01_diff.pdf")

pl1=plot(u_L1,abs.(g4-zeros(lastindex(u_L1),1)), label="\$\\left|g_4 - g_4^{WTI}\\right|\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=18, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
savefig("g4_01_diff.pdf")


p1=plot(u_L1,g1, label="\$g_1\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
#plot!(p1, u_L1,wti_g1, label="\$g_1^{WTI}\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,5)
#savefig("g1_01.pdf")
p2=plot(u_L1,-g2, label="\$-g_2\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18, legend=:bottomright)
#plot!(p2, u_L1,-wti_g2, label="\$-g_2^{WTI}\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18,legend=:bottomright)
xlims!(0,5) 
#savefig("g2_01.pdf")
p3=plot(u_L1,g3,label="\$g_3\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3)
#plot!(p3, u_L1, wti_g3,label="\$g_3^{WTI}\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18) 
xlims!(0,5)
#savefig("g3_01.pdf")
p4=plot(u_L1,g4, label="\$g_4\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3)
#plot!(p4, u_L1, zeros(lastindex(u_L1),1),label="\$g_4^{WTI}\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18) 
xlims!(0,5)
#savefig("g4_01.pdf")
p5=plot(u_L1,-f1, label="\$-f_1\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f1_01.pdf")
p6=plot(u_L1,f2, label="\$f_2\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f2_01.pdf")
p7=plot(u_L1,f3, label="\$f_3\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18, legend=:bottomright)
xlims!(0,2)
#savefig("f3_01.pdf")
p8=plot(u_L1,f4, label="\$f_4\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f4_01.pdf")
p9=plot(u_L1,-f5, label="\$-f_5\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f5_01.pdf")
p10=plot(u_L1,-f6, label="\$-f_6\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f6_01.pdf")
p11=plot(u_L1, f7, label="\$f_7\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f7_01.pdf")
p12=plot(u_L1,-f8, label="\$f_8\\left(k^2, z \\approx 0, Q^2 = 0.1^2 \\, \\textrm{GeV}^2\\right)\$",xlabel="\$k^2 \\, \\, \\, \\left[\\textrm{GeV}^2 \\right]\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
xlims!(0,2)
#savefig("f8_01.pdf")


#plo2=plot(u_q, real.(A(u_q)),xaxis=:log10, xlabel="\$p^2\$", label="\$A(p^2)\$" ,linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
#plot!(p2,u_q,real.(A2.(u_q)),xaxis=:log10, xlabel="\$p^2\$", label="\$A_{Fit}(p^2)\$")
#plot!(plo2,u_q,real.(M(u_q)),xaxis=:log10, xlabel="\$p^2\$", label="\$M(p^2)\$",linewidth=3, legendfontsize=12, xtickfontsize=12, ytickfontsize=12,xguidefontsize=18, yguidefontsize=18)
#savefig("Quark_dressings.pdf")
#plot!(p2,u_q,real.(M2.(u_q)),xaxis=:log10, xlabel="\$p^2\$", label="\$M_{Fit}(p^2)\$")
#title!("Quark Dressing Functions for \$\\eta = 1.8\$")

